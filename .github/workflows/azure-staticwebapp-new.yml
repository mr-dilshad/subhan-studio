name: Deploy web app to Azure Static Web Apps

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: ["develop"]

permissions:
  contents: read

jobs:
  build_and_deploy_job:
    name: Build and Deploy Job
    runs-on: ubuntu-latest
    permissions:
      contents: read # For actions/checkout to fetch code
      pull-requests: write # For Azure/static-web-apps-deploy to comment on PRs
    env: # Define job-level environment variables
      NODE_VERSION: "20.11.0"
      APP_LOCATION: "./" # Location of your Angular client code
      API_LOCATION: "" # Location of your API source code (optional)
      APP_ARTIFACT_LOCATION: "dist/subhan-studio/browser" # Build output directory for Angular
      AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GREEN_CLIFF_0A5511A00 }}
      AZURE_FUNCTION_KEY: ${{ secrets.AZURE_FUNCTION_KEY }}
      API_URL: ${{ secrets.API_URL }}

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: true

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Step 3: Verify Node.js Version
      - name: Verify Node.js Version
        run: node -v

      # Step 4: Inject environment variables into Angular
      - name: Inject Environment Variables
        run: |
          echo "export const environment = { production: true, apiUrl: '${{ env.API_URL }}', azureFunctionKey: '${{ env.AZURE_FUNCTION_KEY }}' };" > src/environments/environment.prod.ts

      # Step 5: Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Step 6: Build the Angular app
      - name: Build Angular App
        run: npm run build -- --output-path=${{ env.APP_ARTIFACT_LOCATION }} --base-href=/

      # Step 7: Deploy to Azure Static Web Apps
      - name: Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GREEN_CLIFF_0A5511A00 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for GitHub integrations (i.e., PR comments)
          action: "upload"
          app_location: ${{ env.APP_LOCATION }}
          api_location: ${{ env.API_LOCATION }}
          app_artifact_location: ${{ env.APP_ARTIFACT_LOCATION }}

  close_pull_request_job:
    name: Close Pull Request Job
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    permissions:
      contents: none
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GREEN_CLIFF_0A5511A00 }}
          action: "close"
